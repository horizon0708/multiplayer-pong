{"version":3,"sources":["webpack:///webpack/bootstrap 4c3d6d5a27fd68ff5c46","webpack:///./core/gameProperties.ts","webpack:///./core/vector.ts","webpack:///./core/ball.ts","webpack:///./client/main.ts","webpack:///./client/client.ts","webpack:///./client/renderer.ts","webpack:///./client/entityInterpolation.ts","webpack:///./client/SimulatedCommHandler-client.ts","webpack:///./server/gameServer.ts","webpack:///./server/SimulatedCommHandler-server.ts","webpack:///./server/gameSimulation.ts","webpack:///./core/physics.ts","webpack:///./core/paddle.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;AC7Da,kBAAU,GAAG,CAAC,CAAC;AACf,iBAAS,GAAG,GAAG,CAAC;AAChB,kBAAU,GAAG,GAAG,CAAC;AACjB,uBAAe,GAAG,IAAI,GAAG,EAAE,CAAC;AAC5B,sBAAc,GAAG,IAAI,GAAG,EAAE,CAAC;;;;;;;;;;ACJxC;IACI,gBAAY,CAAa,EAAE,CAAY;QAA3B,yBAAa;QAAE,yBAAY;QACnC,IAAI,CAAC,CAAC,GAAE,CAAC,CAAC;QACV,IAAI,CAAC,CAAC,GAAE,CAAC,CAAC;IACd,CAAC;IAGL,aAAC;AAAD,CAAC;;;;;;;;;;;ACJD;IACI,cAAY,EAAS,EAAE,IAAW,EAAE,QAAgB,EAAE,SAAgB;QAClE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IACpB,CAAC;IAML,WAAC;AAAD,CAAC;;;;;;;;;;;AChBD,sCAA8B;AAC9B,0CAA8C;AAE9C,IAAM,SAAS,GAAG,IAAI,gBAAM,EAAE,CAAC;AAC/B,IAAM,MAAM,GAAG,IAAI,oBAAU,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;;;;;;;;;;ACJjD,wCAAkC;AAElC,2DAAuE;AAEvE;IACI;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,kBAAQ,CAAC,KAAK,EAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QACvF,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;QAC5B,IAAI,CAAC,WAAW,GAAG,IAAI,qCAA0B,CAAC,IAAI,CAAC,aAAa,EAAC,IAAI,CAAC,YAAY,CAAG,CAAC;IAC9F,CAAC;IAKL,aAAC;AAAD,CAAC;;;;;;;;;;;ACdD,wCAAqD;AAIrD,mDAAwD;AAExD;IACI,kBAAY,QAAgB,EAAE,aAAyB,EAAE,YAAiB,EAAE,YAAqB,EAAE,sBAA+B;QAiB3H,iBAAY,GAAY,IAAI,CAAC;QAC7B,2BAAsB,GAAW,KAAK,CAAC;QAItC,QAAG,GAAG,EAAE,CAAC;QACT,qBAAgB,GAAG,CAAC,CAAC;QACrB,kBAAa,GAAG,CAAC,CAAC;QAvBtB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,sBAAsB,GAAG,sBAAsB,CAAC;QACrD,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;QACxD,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,YAAY,GAAG,IAAI,6BAAmB,EAAE,CAAC;QAC9C,IAAI,CAAC,MAAM,GAAsB,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QACjE,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC5C,CAAC;IAiBD,8BAAW,GAAX;QAAA,iBAEC;QADG,qBAAqB,CAAC,cAAI,YAAI,CAAC,UAAU,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,EAAlC,CAAkC,CAAC,CAAC;IAClE,CAAC;IAEO,6BAAU,GAAlB,UAAmB,SAAS;QAA5B,iBAoBC;QAnBG,EAAE,EAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,sBAAsB,CAAC,EAAC;YACjD,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,sBAAsB,CAAC,MAAM,GAAE,CAAC,CAAC,EAC9F,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAE,CAAC,CAAC,CAAC,CAAC;QACpE,CAAC;QACD,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,EAAC;YACvD,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAE,CAAC,CAAC,CAAC,CAAC;QAC5E,CAAC;QACD,IAAI,CAAC,EAAE,EAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,sBAAsB,CAAC,EAAC;YACvD,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,sBAAsB,CAAC,MAAM,GAAE,CAAC,CAAC,EAC9F,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAE,CAAC,CAAC,CAAC,CAAC;QAC1D,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACrE,CAAC;QAED,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QACxB,qBAAqB,CAAE,cAAK,YAAI,CAAC,UAAU,EAAf,CAAe,CAAE,CAAC;IAClD,CAAC;IAEO,6BAAU,GAAlB,UAAmB,IAAW,EAAE,QAAe;QAC3C,EAAE,EAAC,IAAI,KAAK,QAAQ,CAAC,EAAC;YAClB,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;YACrB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,UAAU,CAAC,UAAU,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;YACpE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;QACzB,CAAC;QACD,EAAE,EAAC,IAAI,KAAK,MAAM,CAAC,EAAC;YAChB,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;YACrB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,UAAU,CAAC,UAAU,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;YACpE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;QACzB,CAAC;IACL,CAAC;IAEO,yBAAM,GAAd,UAAe,QAAkB;QAAjC,iBAKC;QAJG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAChE,QAAQ,CAAC,OAAO,CAAC,gBAAM;YACnB,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,0BAAO,GAAf,UAAgB,SAAS;QACrB,EAAE,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,sBAAsB;YACvF,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;YAC/B,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC9B,CAAC;QACD,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;IAC9D,CAAC;IAEO,6CAA0B,GAAlC,UAAmC,WAAW,EAAE,UAAU;QACtD,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAChE,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;QAC/B,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;IACxC,CAAC;IAEO,+BAAY,GAApB,UAAqB,WAAmB;QACpC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,QAAQ,CAAC,CAAC;IAC5D,CAAC;IAEO,qCAAkB,GAA1B,UAA2B,QAAkB;QAA7C,iBAGC;QAFG,IAAM,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,KAAI,CAAC,QAAQ,EAAtB,CAAsB,CAAC,CAAC;QAC3D,KAAK,CAAC,OAAO,CAAC,WAAC,IAAI,YAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAnC,CAAmC,CAAC,CAAC;IAC5D,CAAC;IAEO,8BAAW,GAAnB;QACI,IAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACnE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvC,EAAE,EAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,EAAE,CAAC,EAAC;YACpC,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;QACpC,CAAC;IACL,CAAC;IACL,eAAC;AAAD,CAAC;;;;;;;;;;;AC/GD,sCAAoC;AACpC,4CAAyD;AACzD,oCAAgC;AAEhC;IACI;QACI,IAAI,CAAC,yBAAyB,GAAG,CAAC,CAAC;IACvC,CAAC;IAIM,4DAA8B,GAArC;QACI,IAAI,CAAC,yBAAyB,GAAG,CAAC,CAAC;IACvC,CAAC;IAAA,CAAC;IAEK,yCAAW,GAAlB,UAAmB,aAAyB;QACxC,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,EAAE,EAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,EAAC;YACzB,IAAM,YAAY,GAAG,aAAa,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC7D,IAAM,YAAY,GAAG,aAAa,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC7D,IAAI,CAAC,yBAAyB,GAAG,WAAW,CAAC,GAAG,EAAE,GAAG,YAAY,CAAC,EAAE,CAAC;YACrE,IAAM,SAAS,GAAG,IAAI,CAAC,yBAAyB,GAAG,cAAc,CAAC,cAAc,CAAC;oCAExE,CAAC;gBACN,IAAM,SAAS,GAAG,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACrC,EAAE,CAAC,CAAC,SAAS,CAAC,EAAE,KAAK,MAAM,CAAC,EAAC;oBACzB,IAAM,SAAS,GAAS,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,WAAC,IAAG,QAAC,CAAC,EAAE,KAAK,SAAS,CAAC,EAAE,EAArB,CAAqB,CAAC,CAAC;oBACxE,IAAM,EAAE,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACvD,IAAM,EAAE,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACvD,IAAM,WAAW,GAAG,IAAI,gBAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,SAAS,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC,CAAC;oBAC7G,IAAM,aAAa,GAAG,IAAI,cAAI,CAAC,SAAS,CAAC,EAAE,EAAE,SAAS,CAAC,IAAI,EAAE,WAAW,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC;oBAC/F,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBAC/B,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,EAAE,KAAK,OAAK,QAAQ,CAAC,EAAC;oBACvC,sBAAsB;gBAC1B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC3B,CAAC;YACL,CAAC;;YAdD,GAAG,EAAE,IAAI,CAAC,GAAE,CAAC,EAAG,CAAC,GAAG,YAAY,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE;wBAAtC,CAAC;aAcT;YACD,MAAM,CAAC,MAAM,CAAC;QAClB,CAAC;QACD,MAAM,CAAC,EAAE,CAAC;IACd,CAAC;IACL,0BAAC;AAAD,CAAC;;;;;;;;;;;AC3CD;IACI,oCAAY,aAAa,EAAE,YAAY;QAAvC,iBAOC;QANG,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,SAAS,GAAG,IAAI,WAAW,CAAC,OAAO,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;QAC9D,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAC,CAAC,IAAG,YAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAZ,CAAY,EAAE,KAAK,CAAC,CAAC;QAC7D,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACvC,QAAQ,CAAC,gBAAgB,CAAC,cAAc,EAAE,UAAC,CAAC,IAAG,YAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAxB,CAAwB,EAAE,KAAK,CAAC,CAAC;IACpF,CAAC;IAMD,yCAAI,GAAJ,UAAK,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;IAC1B,CAAC;IAED,qDAAgB,GAAhB,UAAiB,CAAC;QACd,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;IAC1B,CAAC;IAED,+CAAU,GAAV;IACA,CAAC;IAED,4CAAO,GAAP;IACA,CAAC;IACL,iCAAC;AAAD,CAAC;;;;;;;;;;;AC7BD,2DAAuE;AAEvE,+CAA8C;AAE9C;IACI,oBAAY,SAAS,EAAU,OAAsB;QAAtB,sCAAsB;QAAtB,YAAO,GAAP,OAAO,CAAe;QACjD,IAAI,CAAC,SAAS,GAAG,IAAI,wBAAc,EAAE,CAAC;QACtC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IAE3B,CAAC;IAKO,qCAAgB,GAAxB;QACI,EAAE,EAAC,IAAI,CAAC,SAAS,CAAC,EAAC;YACf,IAAI,CAAC,WAAW,GAAG,IAAI,qCAA0B,CAAC,IAAI,CAAC,CAAC;QAC5D,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,+BAA+B;QACnC,CAAC;IACL,CAAC;IAEL,iBAAC;AAAD,CAAC;;;;;;;;;;;ACrBD,4CAAyD;AAEzD;IAEI,oCAAY,UAAU;QAClB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,IAAI,CAAC,iBAAiB,GAAG,IAAI,WAAW,CAAC,cAAc,EAAE,EAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAC,CAAC;IAC3G,CAAC;IAID,2CAAM,GAAN;IACA,CAAC;IAED,yCAAI,GAAJ;QAAA,iBAEC;QADG,WAAW,CAAC,cAAK,eAAQ,CAAC,aAAa,CAAC,KAAI,CAAC,iBAAiB,CAAC,EAA9C,CAA8C,EAAE,cAAc,CAAC,cAAc,CAAC,CAAC;IACpG,CAAC;IAEO,iDAAY,GAApB;IAEA,CAAC;IACL,iCAAC;AAAD,CAAC;;;;;;;;;;;AC1BD,oCAAgC;AAChC,sCAAoC;AACpC,sCAA2C;AAE3C,4CAAyD;AAEzD,uCAAoC;AAIpC,IAAM,YAAY,GAAG;IACjB,IAAI,cAAI,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,gBAAM,CAAC,GAAG,EAAC,GAAG,CAAC,EAAE,IAAI,gBAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;IAC9D,IAAI,gBAAM,CAAC,YAAY,EAAE,QAAQ,EAAE,IAAI,gBAAM,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;CAC1D,CAAC;AAEF;IACI;QACI,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC;QAC9B,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,eAAe,GAAE,CAAC,CAAC;IAC5B,CAAC;IAOM,8BAAK,GAAZ;QAAA,iBAEC;QADG,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,cAAI,YAAI,CAAC,YAAY,CAAC,KAAI,CAAC,SAAS,CAAC,EAAjC,CAAiC,EAAE,cAAc,CAAC,eAAe,CAAC,CAAC,CAAC,UAAU;IACrH,CAAC;IAEO,qCAAY,GAApB,UAAqB,KAAe;QAChC,kCAAkC;QAGlC,8CAA8C;QAC9C,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAEtB,6FAA6F;QAC7F,oCAAoC;QACpC,6DAA6D;QAC7D,yDAAyD;QACzD,IAAI;IACR,CAAC;IAEM,qCAAY,GAAnB,UAAoB,QAAQ;QACxB,IAAM,KAAK,GAAG,YAAY,CAAC,SAAS,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,YAAY,EAArB,CAAqB,CAAC,CAAC;QACjE,EAAE,EAAC,KAAK,GAAG,CAAC,CAAC,EAAC;YACV,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,QAAQ,CAAC;QACtC,CAAC;IACL,CAAC;IAEM,6BAAI,GAAX;QACI,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC;IAClC,CAAC;IAGL,qBAAC;AAAD,CAAC;;;;;;;;;;;AC1DD,4CAAoD;AAMpD,gBAAuB,QAAkB;IACrC,yBAAyB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAC1C,yBAAyB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAC1C,YAAY,CAAC,QAAQ,CAAC,CAAC;AAC3B,CAAC;AAJD,wBAIC;AAED,sBAA6B,QAAkB;IAC3C,IAAM,IAAI,GAAS,QAAQ,CAAC,IAAI,CAAC,WAAC,IAAG,QAAC,CAAC,EAAE,KAAK,MAAM,EAAf,CAAe,CAAC,CAAC;IACtD,EAAE,EAAC,CAAC,IAAI,CAAC,EAAC;QACN,MAAM,CAAC;IACX,CAAC;IACD,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;IACjD,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;AACrD,CAAC;AAPD,oCAOC;AAED,mCAA0C,OAAgB,EAAE,QAAkB;IAC1E,EAAE,EAAC,OAAO,CAAC,EAAC;QACR,IAAM,IAAI,GAAS,QAAQ,CAAC,IAAI,CAAC,WAAC,IAAG,QAAC,CAAC,EAAE,KAAK,MAAM,EAAf,CAAe,CAAC,CAAC;QACtD,EAAE,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAI,cAAc,CAAC,UAAU,GAAG,cAAc,CAAC,UAAU;eACpG,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAI,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC;YAClF,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QACzC,CAAC;IACL,CAAC;AACL,CAAC;AARD,8DAQC;AAED,mCAA0C,OAAgB,EAAE,QAAkB;IAC1E,EAAE,EAAC,OAAO,CAAC,EAAC;QACR,IAAM,IAAI,GAAS,QAAQ,CAAC,IAAI,CAAC,WAAC,IAAG,QAAC,CAAC,EAAE,KAAK,MAAM,EAAf,CAAe,CAAC,CAAC;QACtD,EAAE,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,cAAc,CAAC,SAAS,GAAG,cAAc,CAAC,UAAU;eAClG,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC;YACjF,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QACzC,CAAC;IACL,CAAC;AACL,CAAC;AARD,8DAQC;AAED,wBAA+B,UAAsB,EAAE,QAAkB;IACrE,IAAM,MAAM,GAAW,QAAQ,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,UAAU,CAAC,EAAE,EAAtB,CAAsB,CAAC,CAAC;IAClE,EAAE,EAAC,MAAM,CAAC,CAAC,CAAC;QACR,EAAE,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC;QACtC,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC;QACtC,CAAC;IACL,CAAC;IACD,MAAM,CAAC,QAAQ,CAAC;AACpB,CAAC;AAVD,wCAUC;;;;;;;;;;AChDD;IACI,gBAAY,EAAS,EAAE,IAAW,EAAE,QAAgB;QAChD,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IACpB,CAAC;IAKL,aAAC;AAAD,CAAC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4c3d6d5a27fd68ff5c46","export const ballRadius = 5;\r\nexport const gameWidth = 660;\r\nexport const gameHeight = 440;\r\nexport const physicsTimestep = 1000 / 60;\r\nexport const serverTimestep = 1000 / 10;\n\n\n// WEBPACK FOOTER //\n// ./core/gameProperties.ts","export default class Vector{\r\n    constructor(x: number = 0, y:number = 0){\r\n        this.x =x;\r\n        this.y =y;\r\n    }\r\n    x: number;\r\n    y: number;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./core/vector.ts","import Entity from './entity';\r\nimport Vector from './vector';\r\n\r\nexport default class Ball implements Entity{\r\n    constructor(id:string, name:string, position: Vector, direction:Vector){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.position = position;\r\n        this.direction = direction;\r\n        this.speed = 10;\r\n    }\r\n    id: string;\r\n    name: string;\r\n    position: Vector;\r\n    direction: Vector;\r\n    speed: number;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./core/ball.ts","import Client from \"./client\";\r\nimport GameServer from \"../server/gameServer\";\r\n\r\nconst clientOne = new Client();\r\nconst server = new GameServer(true, [clientOne]);\n\n\n// WEBPACK FOOTER //\n// ./client/main.ts","import Renderer from \"./renderer\";\r\nimport ICommHandler from \"./interface/ICommHandler\";\r\nimport SimulatedCommHandlerClient from \"./SimulatedCommHandler-client\";\r\n\r\nexport default class Client {\r\n    constructor(){\r\n        this.renderer = new Renderer('one',this.serverUpdates, this.clientInputs, true, false);\r\n        this.renderer.startRender();\r\n        this.commHandler = new SimulatedCommHandlerClient(this.serverUpdates,this.clientInputs, );\r\n    }\r\n    private serverUpdates;\r\n    private clientInputs;\r\n    private renderer: Renderer;\r\n    public commHandler: ICommHandler;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./client/client.ts","import * as properties from '../core/gameProperties';\r\nimport entity, {default as Entity} from '../core/entity';\r\nimport vector from '../core/vector';\r\nimport GameData from \"../server/model/gameData\";\r\nimport EntityInterpolation from \"./entityInterpolation\";\r\n\r\nexport default class Renderer {\r\n    constructor(playerId: string, serverUpdates: GameData[], clientInputs: any, enableInterp: boolean, enableClientPrediction: boolean){\r\n        this.playerId = playerId;\r\n        this.serverUpdates = serverUpdates;\r\n        this.enableInterp = enableInterp;\r\n        this.enableClientPrediction = enableClientPrediction;\r\n        this.fpsDisplay = document.getElementById('fpsDisplay');\r\n        this.clientInputs = clientInputs;\r\n        this.Interpolater = new EntityInterpolation();\r\n        this.canvas = <HTMLCanvasElement>document.getElementById(\"game\");\r\n        this.ctx = this.canvas.getContext(\"2d\");\r\n    }\r\n\r\n    public playerId : string ;\r\n    public serverUpdates: GameData[];\r\n    public interpolatedFrames: any[];\r\n    public clientPredictionFrames: any[];\r\n    public clientInputs: any[];\r\n    public enableInterp: boolean = true;\r\n    public enableClientPrediction: boolean= false;\r\n    private canvas;\r\n    private ctx;\r\n    private fpsDisplay: any;\r\n    private fps = 60;\r\n    private framesThisSecond = 0;\r\n    private lastFpsUpdate = 0;\r\n    private Interpolater: EntityInterpolation;\r\n\r\n    startRender(){\r\n        requestAnimationFrame(()=>this.renderLoop(performance.now()));\r\n    }\r\n\r\n    private renderLoop(timestamp){\r\n        if(this.enableInterp && this.enableClientPrediction){\r\n            this.interpolate();\r\n            this.renderWithClientPrediction(this.clientPredictionFrames[this.clientPredictionFrames.length -1],\r\n                this.interpolatedFrames[this.interpolatedFrames.length -1]);\r\n        }\r\n        else if(this.enableInterp && !this.enableClientPrediction){\r\n            this.interpolate();\r\n            this.render(this.interpolatedFrames[this.interpolatedFrames.length -1]);\r\n        }\r\n        else if(!this.enableInterp && this.enableClientPrediction){\r\n            this.renderWithClientPrediction(this.clientPredictionFrames[this.clientPredictionFrames.length -1],\r\n                this.serverUpdates[this.serverUpdates.length -1]);\r\n        }\r\n        else {\r\n            this.render(this.serverUpdates[this.serverUpdates.length -1].et);\r\n        }\r\n\r\n        this.drawFPS(timestamp);\r\n        requestAnimationFrame( ()=> this.renderLoop );\r\n    }\r\n\r\n    private drawEntity(name:string, position:vector): void {\r\n        if(name === \"paddle\"){\r\n            this.ctx.beginPath();\r\n            this.ctx.arc(position.x, position.y, properties.ballRadius, 0, 360);\r\n            this.ctx.fill();\r\n            this.ctx.closePath();\r\n        }\r\n        if(name === \"ball\"){\r\n            this.ctx.beginPath();\r\n            this.ctx.arc(position.x, position.y, properties.ballRadius, 0, 360);\r\n            this.ctx.fill();\r\n            this.ctx.closePath();\r\n        }\r\n    }\r\n\r\n    private render(entities: entity[]): void {\r\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        entities.forEach(entity => {\r\n            this.drawEntity(entity.name, entity.position);\r\n        });\r\n    }\r\n\r\n    private drawFPS(timestamp){\r\n        if (timestamp > this.lastFpsUpdate + 1000) { // update every second\r\n            this.fps = 0.25 * this.framesThisSecond + (1 - 0.25) * this.fps; // compute the new FPS\r\n            this.lastFpsUpdate = timestamp;\r\n            this.framesThisSecond = 0;\r\n        }\r\n        this.framesThisSecond++;\r\n        this.fpsDisplay.innerHTML = Math.round(this.fps) + ' FPS';\r\n    }\r\n\r\n    private renderWithClientPrediction(playerState, worldState){\r\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        this.renderPlayer(playerState);\r\n        this.renderExceptPlayer(worldState);\r\n    }\r\n\r\n    private renderPlayer(playerState: entity): void{\r\n        this.drawEntity(playerState.name, playerState.position);\r\n    }\r\n\r\n    private renderExceptPlayer(entities: entity[]): void {\r\n        const world = entities.filter(x => x.id !== this.playerId);\r\n        world.forEach(x => this.drawEntity(x.name, x.position));\r\n    }\r\n\r\n    private interpolate(){\r\n        const newFrame = this.Interpolater.interpolate(this.serverUpdates);\r\n        this.interpolatedFrames.push(newFrame);\r\n        if(this.interpolatedFrames.length > 10){\r\n            this.interpolatedFrames.shift();\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./client/renderer.ts","// given a serius of server updates, returns interpolated game state;\r\nimport Entity from \"../core/entity\";\r\nimport GameData from \"../server/model/gameData\";\r\nimport Vector from \"../core/vector\";\r\nimport * as gameProperties from '../core/gameProperties';\r\nimport Ball from \"../core/ball\";\r\n\r\nexport default class EntityInterpolation {\r\n    constructor(){\r\n        this.timeSinceLastServerUpdate = 0;\r\n    }\r\n    public timeSinceLastServerUpdate : number;\r\n    public playerId: string;\r\n\r\n    public resetTimeSinceLastServerUpdate(): void {\r\n        this.timeSinceLastServerUpdate = 0;\r\n    };\r\n\r\n    public interpolate(serverUpdates: GameData[]): Entity[] {\r\n        let output = [];\r\n        if(serverUpdates.length > 1){\r\n            const newGameState = serverUpdates[serverUpdates.length - 1];\r\n            const oldGameState = serverUpdates[serverUpdates.length - 2];\r\n            this.timeSinceLastServerUpdate = performance.now() - newGameState.ts;\r\n            const lerpRatio = this.timeSinceLastServerUpdate / gameProperties.serverTimestep;\r\n\r\n            for( let i =0 ; i < oldGameState.et.length; i++) {\r\n                const oldEntity = oldGameState.et[i];\r\n                if (oldEntity.id === \"ball\"){\r\n                    const newEntity = <Ball>newGameState.et.find(x =>x.id === oldEntity.id);\r\n                    const dx = newEntity.position.x - oldEntity.position.x;\r\n                    const dy = newEntity.position.y - oldEntity.position.y;\r\n                    const newPosition = new Vector(oldEntity.position.x + dx * lerpRatio, oldEntity.position.y + dy * lerpRatio);\r\n                    const updatedEntity = new Ball(newEntity.id, newEntity.name, newPosition, newEntity.direction);\r\n                    output.push(updatedEntity);\r\n                } else if (oldEntity.id !== this.playerId){\r\n                    // render other player\r\n                } else {\r\n                    output.push(oldEntity);\r\n                }\r\n            }\r\n            return output;\r\n        }\r\n        return [];\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/entityInterpolation.ts","import ICommHandler from \"./interface/ICommHandler\";\r\n\r\nexport default class SimulatedCommHandlerClient implements ICommHandler {\r\n    constructor(serverUpdates, clientInputs){\r\n        this.serverUpdates = serverUpdates;\r\n        this.clientInputs = clientInputs;\r\n        this.testEvent = new CustomEvent('build', { detail: \"test\" });\r\n        document.addEventListener('build', (e)=>this.test(e), false);\r\n        document.dispatchEvent(this.testEvent);\r\n        document.addEventListener('serverUpdate', (e)=>this.GetServerUpdates(e), false);\r\n    }\r\n\r\n    testEvent;\r\n    serverUpdates;\r\n    clientInputs;\r\n\r\n    test(e){\r\n        console.log(e.detail);\r\n    }\r\n\r\n    GetServerUpdates(e) {\r\n        console.log(e.detail);\r\n    }\r\n\r\n    SendInputs() {\r\n    }\r\n\r\n    GetPing() {\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./client/SimulatedCommHandler-client.ts","import SimulatedCommHandlerServer from \"./SimulatedCommHandler-server\";\r\nimport Client from \"../client/client\";\r\nimport GameSimulation from \"./gameSimulation\";\r\n\r\nexport default class GameServer{\r\n    constructor(simulated, private clients: Client[] = []){\r\n        this.simulator = new GameSimulation();\r\n        this.simulated = simulated;\r\n        this.startCommHandler();\r\n        this.simulator.start();\r\n\r\n    }\r\n    public commHandler;\r\n    public simulated;\r\n    public simulator : GameSimulation;\r\n\r\n    private startCommHandler(){\r\n        if(this.simulated){\r\n            this.commHandler = new SimulatedCommHandlerServer(this);\r\n        } else {\r\n            // initialize real comm handler\r\n        }\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./server/gameServer.ts","import IServerCommHandler from \"./interface/IServerCommHandler\";\r\nimport GameServer from \"./gameServer\";\r\nimport Client from \"../client/client\";\r\nimport * as gameProperties from '../core/gameProperties';\r\n\r\nexport default class SimulatedCommHandlerServer implements IServerCommHandler{\r\n\r\n    constructor(gameServer){\r\n        this.gameServer = gameServer;\r\n        this.listen();\r\n        this.send();\r\n        this.sendGameDataEvent = new CustomEvent('serverUpdate', {detail: this.gameServer.simulator.gameState})\r\n    }\r\n    sendGameDataEvent: CustomEvent;\r\n    gameServer : GameServer;\r\n\r\n    listen() {\r\n    }\r\n\r\n    send() {\r\n        setInterval(()=> document.dispatchEvent(this.sendGameDataEvent), gameProperties.serverTimestep);\r\n    }\r\n\r\n    private sendGameData(): void {\r\n\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./server/SimulatedCommHandler-server.ts","import Ball from \"../core/ball\";\r\nimport Vector from \"../core/vector\";\r\nimport * as Physics from '../core/physics';\r\nimport Entity from \"../core/entity\";\r\nimport * as GameProperties from '../core/gameProperties';\r\nimport {physicsTimestep} from \"../core/gameProperties\";\r\nimport Paddle from \"../core/paddle\";\r\nimport Queue from \"./model/Queue\";\r\nimport PaddleData from \"../core/model/PaddleData\";\r\n\r\nconst gameEntities = [\r\n    new Ball('ball', 'ball', new Vector(100,100), new Vector(1,1)),\r\n    new Paddle('unassigned', 'paddle', new Vector(60, 150))\r\n];\r\n\r\nexport default class GameSimulation {\r\n    constructor(){\r\n        this.gameState = gameEntities;\r\n        this.deltaTime = 0;\r\n        this.lastFrameTimeMs =0;\r\n    }\r\n\r\n    private deltaTime: number;\r\n    private lastFrameTimeMs: number;\r\n    private physicsLoop: any;\r\n    public gameState: Entity[];\r\n\r\n    public start(){\r\n        this.physicsLoop = setInterval(()=>this.serverUpdate(this.gameState), GameProperties.physicsTimestep); // 10 tick\r\n    }\r\n\r\n    private serverUpdate(state: Entity[],){\r\n        // go through and apply all inputs\r\n\r\n\r\n        // handle phyics ( ball movements, collision )\r\n        Physics.update(state);\r\n\r\n        // this.deltaTime += timestamp - this.lastFrameTimeMs; // get the delta time since last frame\r\n        // this.lastFrameTimeMs = timestamp;\r\n        // while (this.deltaTime >= GameProperties.physicsTimestep) {\r\n        //      this.deltaTime -= GameProperties.physicsTimestep;\r\n        // }\r\n    }\r\n\r\n    public assignPlayer(playerId){\r\n        const index = gameEntities.findIndex(x => x.id === 'unassigned');\r\n        if(index > 0){\r\n            gameEntities[index].id = playerId;\r\n        }\r\n    }\r\n\r\n    public stop(){\r\n        clearInterval(this.physicsLoop);\r\n        this.gameState = gameEntities;\r\n    }\r\n\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./server/gameSimulation.ts","import * as  gameProperties from './gameProperties';\r\nimport Entity from \"./entity\";\r\nimport Ball from \"./ball\";\r\nimport Paddle from \"./paddle\";\r\nimport PaddleData from \"./model/PaddleData\";\r\n\r\nexport function update(entities: Entity[]): void {\r\n    ballBounceOffLeftAndRight(true, entities);\r\n    ballBounceOffTopAndBottom(true, entities);\r\n    ballMovement(entities);\r\n}\r\n\r\nexport function ballMovement(entities: Entity[]): void {\r\n    const ball = <Ball>entities.find(x=> x.id === \"ball\");\r\n    if(!ball){\r\n        return;\r\n    }\r\n    ball.position.x += ball.direction.x * ball.speed;\r\n    ball.position.y += ball.direction.y * ball.speed;\r\n}\r\n\r\nexport function ballBounceOffTopAndBottom(enabled: boolean, entities: Entity[]){\r\n    if(enabled){\r\n        const ball = <Ball>entities.find(x=> x.id === \"ball\");\r\n        if(ball.position.y + ball.direction.y * ball.speed  > gameProperties.gameHeight - gameProperties.ballRadius\r\n            || ball.position.y + ball.direction.y * ball.speed  < gameProperties.ballRadius) {\r\n            ball.direction.y = -ball.direction.y;\r\n        }\r\n    }\r\n}\r\n\r\nexport function ballBounceOffLeftAndRight(enabled: boolean, entities: Entity[]){\r\n    if(enabled){\r\n        const ball = <Ball>entities.find(x=> x.id === \"ball\");\r\n        if(ball.position.x + ball.direction.x * ball.speed > gameProperties.gameWidth - gameProperties.ballRadius\r\n            || ball.position.x + ball.direction.x * ball.speed < gameProperties.ballRadius) {\r\n            ball.direction.x = -ball.direction.x;\r\n        }\r\n    }\r\n}\r\n\r\nexport function PaddleMovement(paddleData: PaddleData, entities: Entity[]) : Entity[]{\r\n    const player = <Paddle>entities.find(x => x.id === paddleData.id);\r\n    if(player) {\r\n        if (paddleData.up) {\r\n            player.position.y += player.speed;\r\n        } else {\r\n            player.position.y -= player.speed;\r\n        }\r\n    }\r\n    return entities;\r\n}\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./core/physics.ts","import Entity from './entity';\r\nimport Vector from './vector';\r\n\r\nexport default class Paddle implements Entity{\r\n    constructor(id:string, name:string, position: Vector){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.position = position;\r\n        this.speed = 10;\r\n    }\r\n    id: string;\r\n    name: string;\r\n    position: Vector;\r\n    speed: number;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./core/paddle.ts"],"sourceRoot":""}